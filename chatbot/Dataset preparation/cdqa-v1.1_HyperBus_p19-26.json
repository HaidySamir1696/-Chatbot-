{"version":"v1.1","data":[{"title":"HyperBusSpecification","paragraphs":[{"context":"HyperBus Device Software Interface","qas":[]},{"context":"4. Memory SpaceWhen CA[46] is 0 a read or write transaction accesses the memory array. The Memory Space address map is device dependent - refer to the device data sheet to determine the device memory space address map.","qas":[{"question":"What happens when CA[46] is 0?","id":"004e36b5-7cef-4566-a0f6-03017bfb2765","answers":[{"answer_start":32,"text":"a read or write transaction accesses the memory array"}]},{"question":"Is Memory Space address map device dependent?","id":"d775163a-cd89-437b-ae0b-9b034733f4d5","answers":[{"answer_start":87,"text":"The Memory Space address map is device dependent - refer to the device data sheet"}]}]},{"context":"5. Register SpaceWhen CA[46] is 1 a read or write transaction accesses the Register Space. The Register Space map is device dependent - refer to the device data sheet to determine the complete device register space address map.","qas":[{"question":"Is register space map device dependent?","id":"58dc02c3-7437-470c-b0bc-ad043b2c65f7","answers":[{"answer_start":91,"text":"The Register Space map is device dependent - refer to the device data sheet"}]},{"question":"What happens when CA[46] is 1?","id":"6bbce08c-9bf6-4de0-b287-29c1333dc42b","answers":[{"answer_start":17,"text":"When CA[46] is 1 a read or write transaction accesses the Register Space"}]}]},{"context":"5.1 Device Identification RegistersThere are HyperBus device information words (registers) that can be read to identify the device manufacturer, the device type, the data capacity if the device is a memory, and other device specific feature parameters.","qas":[]},{"context":"HyperFlash devices are software backward compatible with the Spansion parallel interface GL family flash memories. HyperFlash devices require a command sequence to make the device identification (ID) information visible. This device ID command sequence was referred as the Autoselect Address Space Overlay (ASO) in GL family memories. When the ID command sequence is written to the HyperFlash device, the ID information replaces (overlays) one sector (erase block) of the memory array space. The base address of the block where the ID information appears is set by an address in the in the command sequence. HyperFlash memories do not require selection of the HyperBus Register Address space when writing commands or reading register information. ","qas":[{"question":"Are HyperFlash devices compatible with the Spansion parallel interface GL family flash memories?","id":"594604e4-e991-4e6c-86af-301d28170b83","answers":[{"answer_start":0,"text":"HyperFlash devices are software backward compatible with the Spansion parallel interface GL family flash memories."}]}]},{"context":"The CA[46] bit is ignored by HyperFlash devices. HyperFlash memories will respond to the device ID command sequence when it is written to either the Memory Space or the Register Space. The device ID information starts at location zero of the selected block of the Memory / Register space.","qas":[]},{"context":"HyperRAM and other HyperBus peripherals are required to implement the Register Space and place the device ID information starting at location zero in the Register Space. Upper address bits not needed for selecting portions of the Register Space are don\u2019t care, such that the implemented portion of each device Register Space aliases within (is repeated throughout) the Register Space.","qas":[]},{"context":"The recommended method for reading the device ID information is to write the HyperFlash ID command sequence to the Register Space of a device (with chip select low for the desired device) with the upper address bits set to zero. This will cause HyperFlash devices to display their ID information at the base address of the selected block, in what appears to the host system HyperBus master interface to be Register Space. ","qas":[{"question":"What is the recommended method for reading the device ID information?","id":"6e84b96e-2477-4ff3-aa10-4847edb6ab5b","answers":[{"answer_start":67,"text":"write the HyperFlash ID command sequence to the Register Space of a device (with chip select low for the desired device) with the upper address bits set to zero."}]}]},{"context":"HyperRAM or other HyperBus peripherals are required to ignore the HyperFlash command sequences and simply always display their ID information starting at location zero in Register Space. By following this recommendation, each device on HyperBus will display its ID starting at location zero in Register Space. ","qas":[{"question":"Why are HyperRAM and other HyperBus peripherals required?","id":"66e60fc3-38fe-4ec9-bdfa-d024ab4fd959","answers":[{"answer_start":52,"text":"to ignore the HyperFlash command sequences and simply always display their ID information starting at location zero in Register Space."}]}]},{"context":"The structure of the first two words of device ID is consistent for all HyperBus devices and provides information on the device selected when CS# is low. Information fields in these first two words identify:\uf06e Manufacturer\uf06e Device Type","qas":[{"question":"How about The structure of the first two words of device ID?","id":"908335f5-5ce1-4600-98e6-9d25abe44d3b","answers":[{"answer_start":53,"text":"consistent for all HyperBus devices and provides information on the device selected when CS# is low"}]}]},{"context":"Other fields in these first two words and the remainder of the Register Space are device dependent - refer to the device data sheet for additional information on the contents of the device ID and other Register Space locations.","qas":[]},{"context":"Table 5.1  Word Address 0 ID Register Bit Assignments","qas":[]},{"context":"Bits Function Settings (Binary)","qas":[]},{"context":"15-4 Device Dependent Refer to the device data sheet for more information.","qas":[]},{"context":"3-0 Manufacturer0000 - Reserved)0001 - Spansion0010 to 1111 - Reserved","qas":[]},{"context":"Document Number: 001-99253 Rev. *B Page 20 of 47","qas":[]},{"context":"5.2 Configuration RegistersConfiguration register default values are loaded upon power-up or hardware reset. The configuration registers controlling the HyperBus interface behavior are volatile and can be written at any time the device is in standby state. ","qas":[]},{"context":"The location in Register Space and structure of the register contents are device dependent. Refer the device data sheet for more information.","qas":[]},{"context":"All HyperBus devices have configuration register fields in Register Space that define:\uf06e Deep Power Down (DPD) operation mode\uf06e Output Drive Strength\uf06e Initial Latency Count (clock cycle count from the capture of CA1 to the beginning of data transfer)\uf06e Fixed Initial Latency Option (device dependent effect)\uf06e Hybrid Wrap Option (one wrapped access then switch to linear burst)\uf06e Wrapped burst length and alignment (options supported are device dependent).","qas":[{"question":"What do configuration register fields in Register Space define?","id":"298d92f1-c707-4a55-9d1f-8fc6d54dda2c","answers":[{"answer_start":-1,"text":"Deep Power Down (DPD) operation mode Output Drive Strength Initial Latency Count (clock cycle count from the capture of CA1 to the beginning of data transfer) Fixed Initial Latency Option (device dependent effect) Hybrid Wrap Option (one wrapped access then switch to linear burst) Wrapped burst length and alignment (options supported are device dependent)."}]}]},{"context":"Table 5.2  Word Address 1 ID Register Bit Assignments","qas":[]},{"context":"15-4 Device Dependent Refer to the device data sheet for more information.","qas":[]},{"context":"Table 5.3  Example Configuration Register Bit Assignments  (Sheet 1 of 2)","qas":[]},{"context":"15 Deep Power Down Enable0 - Writing 0 to CR[15] causes the device to enter Deep Power Down.1 - Normal operation (default)","qas":[]},{"context":"14-12 Drive Strength","qas":[]},{"context":"000 - Device dependent impedance (default)001 - Device dependent impedance010 - Device dependent impedance011 - Device dependent impedance100 - Device dependent impedance101 - Device dependent impedance110 - Device dependent impedance111 - Device dependent impedance","qas":[]},{"context":"11-8 Reserved1 - Reserved (default)Reserved for Future Use. When writing this register, these bits should be set to 1 for future compatibility.","qas":[]},{"context":"Document Number: 001-99253 Rev. *B Page 21 of 47","qas":[]},{"context":"Notes1. For device dependent settings, refer to the device data sheet for more information.","qas":[]},{"context":"5.2.0.1 Deep Power-DownWhen the device is not needed for system operation, it may be placed in a very low power consuming mode called Deep Power-Down (DPD), by writing 0 to CR0[15]. When CR0[15] is cleared to 0, the device immediately enters the DPD mode. A write to the device setting CR0[15] to 1, POR, or reset will cause the device to exit DPD mode. Returning to Standby mode requires tDPDOUT time. The power consumption and any side effects of DPD mode are device dependent - refer to the device data sheet for additional details. DPD mode support is not required for HyperBus devices, some devices do not implement a DPD mode.","qas":[{"question":"What happens when CR0[15] is set to 1?","id":"2bcea231-2914-4a75-8134-86afad5f0d2d","answers":[{"answer_start":300,"text":"POR, or reset will cause the device to exit DPD mode"}]},{"question":"Is DPD mode support required for HyperBus devices?","id":"43c66864-da89-4d15-adfc-55f88636c2d9","answers":[{"answer_start":536,"text":"DPD mode support is not required for HyperBus devices, some devices do not implement a DPD mode."}]}]},{"context":"5.2.0.2 Drive StrengthDQ signal line loading, length, and impedance vary depending on each system design. Configuration register bits CR0[14:12] provide a means to adjust the DQ[7:0] signal output impedance to customize the DQ signal impedance to the system to minimize high speed signal behaviors such as overshoot, undershoot, and ringing. The default POR or reset configuration value is 000b to select the mid point of the available output impedance options. The impedance values for each Drive Strength code is device dependent - refer to the device data sheet for additional details.","qas":[{"question":"What do bits CR0[14:12] provide?","id":"3688d5f6-700b-4d88-b363-c320732deb31","answers":[{"answer_start":106,"text":"Configuration register bits CR0[14:12] provide a means to adjust the DQ[7:0] signal output impedance"}]}]},{"context":"5.2.0.3 Initial LatencyMemory Space read and write transactions or Register Space read transactions require some initial latency to open the row selected by the Command/Address. This initial latency is tACC as shown in Figure 3.4, Read Transaction with Additional Initial Latency  on page 14 and Figure 3.6, Write Transaction with Additional Initial Latency  on page 17. The number of latency clocks needed to satisfy tACC depends on the HyperBus frequency and can vary from 3 to 16 clocks. The value in CR0[7:4] selects the number of clocks for initial latency. The number of initial latency options implemented and the POR or reset default initial value is device dependent. The default value is selected to allow for operation up to a maximum frequency of the device prior to the host system setting a lower an initial latency value that may be more optimal for the system.","qas":[{"question":"What is The number of latency clocks needed to satisfy the initial latency?","id":"2b66058a-811e-40b8-9c4d-7e8b904c6304","answers":[{"answer_start":371,"text":"The number of latency clocks needed to satisfy tACC depends on the HyperBus frequency and can vary from 3 to 16 clocks."}]},{"question":"What is The number of latency clocks needed to satisfy tACC?","id":"e71b2eb2-426d-4c33-8361-5c9bd493dc35","answers":[{"answer_start":371,"text":"The number of latency clocks needed to satisfy tACC depends on the HyperBus frequency and can vary from 3 to 16 clocks."}]}]},{"context":"7-4 Initial Latency","qas":[]},{"context":"0000 - 5 Clocks0001 - 6 Clocks0010 - 7 Clocks0011 - 8 Clocks0100 - 9 Clocks0101 - 10 Clocks0110 - 11 Clocks0111 - 12 Clocks1000 - 13 Clocks1001 - 14 Clocks1010 - 15 Clocks1011 - 16 Clocks1100 - Reserved1101 - Reserved1110 - 3 Clock Latency1111 - 4 Clock LatencyThe number of initial latency options implemented and the POR or reset default initial value is device dependent.","qas":[]},{"context":"3 Fixed Latency Enable0 - Variable Initial Latency1 - Fixed Initial Latency (default)Effect of this bit is device dependent.","qas":[]},{"context":"2 Hybrid Burst Enable0: Wrapped burst sequences to follow hybrid burst sequencing1: Wrapped burst sequences in legacy wrapped burst manner (default)","qas":[]},{"context":"1-0 Burst Length","qas":[]},{"context":"00 - 128 bytes01 - 64 bytes10- 16 bytes11 - 32 bytes (default)The options supported are device dependent.","qas":[]},{"context":"Table 5.3  Example Configuration Register Bit Assignments  (Sheet 2 of 2)","qas":[]},{"context":"CR0 Bit Function Settings (Binary)","qas":[]},{"context":"Document Number: 001-99253 Rev. *B Page 22 of 47","qas":[]},{"context":"In the event additional latency is required at the time a read or write transaction begins, the RWDS signal goes high during the Command/Address to indicate that an additional initial latency count is being inserted to allow an internal operation to complete before opening the selected row.","qas":[{"question":"Why is additional latency required?","id":"5a57abc0-9403-479d-b8e1-b23dd3e03609","answers":[{"answer_start":13,"text":"additional latency is required at the time a read or write transaction begins, the RWDS signal goes high during the Command/Address to indicate that an additional initial latency count is being inserted to allow an internal operation to complete before opening the selected row"}]}]},{"context":"Write transactions to memory or register space may be defined by a device to always have zero initial latency. The use of zero initial latency writes are device dependent. RWDS is always driven by the HyperBus slave during the Command/Address period with an indication of the initial latency requirement. This indication is intended for write transactions that support initial latency and is always provided because RWDS is driven before CA0 is received to indicate whether the transaction is a read or write and to memory or register space. RWDS is ignored by the HyperBus master when a write transaction target address space is designated by a device as always having zero latency.","qas":[{"question":"When is RWDS driven by the HyperBus slave?","id":"11c31e42-1829-4109-8698-900a4a2e7bf1","answers":[{"answer_start":216,"text":"during the Command/Address period with an indication of the initial latency requirement"}]}]},{"context":"5.2.0.4 Fixed LatencyA configuration register option bit CR0[3] is provided to make all read or write transactions with initial latency require the same initial latency by always driving RWDS low or high during the Command/Address to indicate whether one or two initial latency counts are required. This fixed initial latency is independent of any need for additional initial latency, it simply provides a fixed (deterministic) initial latency for all of these transaction types. The fixed latency option may simplify the design of some HyperBus memory controllers or ensure deterministic transaction performance. Fixed latency is the default POR or reset configuration. The system may clear this configuration bit to disable fixed latency and allow variable initial latency with RWDS driven high only when additional latency is required. ","qas":[{"question":"Why do the system clear CR0[3]?","id":"2eadd3ee-66f9-4580-ba3c-8272f76f0b21","answers":[{"answer_start":715,"text":"to disable fixed latency and allow variable initial latency with RWDS driven high only when additional latency is required"}]}]},{"context":"Implementation of the fixed initial latency feature is optional and device dependent. Some HyperBus devices do not implement the feature and always drive RWDS low during CA cycles to use a single fixed initial latency count with transactions that have initial latency. Some HyperBus devices that implement the fixed latency feature will use the fixed latency setting to always drive RWDS high during CA cycles to always require two latency counts. ","qas":[]},{"context":"5.2.0.5 Wrapped BurstA wrapped burst transaction accesses memory within a group of words aligned on a word boundary matching the length of the configured group. Wrapped access groups can be configured as 16, 32, 64 or 128 bytes alignment and length. However, the number of wrap configuration options supported is device dependent.","qas":[]},{"context":"During wrapped transactions, access starts at the Command/Address selected location within the group, continues to the end of the configured word group aligned boundary, then wraps around to the beginning location in the group, then continues back to the starting location. Wrapped bursts are generally used for critical word first instruction or data cache line fill read accesses. ","qas":[{"question":"why are Wrapped bursts used?","id":"ab26491a-4d0f-4cfe-b9a2-ea556a67b91a","answers":[{"answer_start":302,"text":" used for critical word first instruction or data cache line fill read accesses"}]}]},{"context":"5.2.0.6 Hybrid BurstThe beginning of a hybrid burst will wrap within the target address wrapped burst group length before continuing to the next half-page of data beyond the end of the wrap group. Continued access is in linear burst order until the transfer is ended by returning CS# high. This hybrid of a wrapped burst followed by a linear burst starting at the beginning of the next half-page, allows multiple sequential address cache lines to be filled in a single access. The first cache line is filled starting at the critical word. Then the next sequential cache line in memory can be read in to the cache while the first line is being processed. Hybrid burst support is device dependent..Table 5.4  Example Wrapped Burst Sequences","qas":[]},{"context":"Burst Selection Burst ","qas":[]},{"context":"Type","qas":[]},{"context":"Wrap Boundary (Bytes)","qas":[]},{"context":"Start Address (Hex)","qas":[]},{"context":"Address Sequence (Hex)(Words)","qas":[]},{"context":"CA[45]","qas":[]},{"context":"0 Hybrid 128","qas":[]},{"context":"128 Wrap once then ","qas":[]},{"context":"LinearXXXXXX03","qas":[]},{"context":"03, 04, 05, 06, 07, 08, 09, 0A, 0B, 0C, 0D, 0E, 0F, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 1A, 1B, 1C, 1D, 1E, 1F, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 2A, 2B, 2C, 2D, 2E, 2F, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 3A, 3B, 3C, 3D, 3E, 3F, 00, 01, 02 (wrap complete, now linear beyond the end of the initial 128 byte wrap group) 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 4A, 4B, 4C, 4D, 4E, 4F, 50, 51, ...","qas":[]},{"context":"0 Hybrid 6464 Wrap once then Linear","qas":[]},{"context":"XXXXXX03","qas":[]},{"context":"03, 04, 05, 06, 07, 08, 09, 0A, 0B, 0C, 0D, 0E, 0F, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 1A, 1B, 1C, 1D, 1E, 1F, 00, 01, 02, (wrap complete, now linear beyond the end of the initial 64 byte wrap group) 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 2A, 2B, 2C, 2D, 2E, 2F, 30, 31, ...","qas":[]},{"context":"Document Number: 001-99253 Rev. *B Page 23 of 47","qas":[]},{"context":"5.2.1 Additional Identification or Configuration RegistersAny additional identification or configuration registers are device dependent. Refer to the device data sheet for more information.","qas":[]},{"context":"0 Hybrid 3232 Wrap once then Linear","qas":[]},{"context":"XXXXXX0A0A, 0B, 0C, 0D, 0E, 0F, 00, 01, 02, 03, 04, 05, 06, 07, 08, 09, ...","qas":[]},{"context":"0 Hybrid 1616 Wrap once then Linear","qas":[]},{"context":"XXXXXX0202, 03, 04, 05, 06, 07, 00, 01, (wrap complete, now linear beyond the end of the initial 16 byte wrap group) 08, 09, 0A, 0B, 0C, 0D, 0E, 0F, 10, 11, 12, ...","qas":[]},{"context":"0 Wrap 128 128 XXXXXX03","qas":[]},{"context":"03, 04, 05, 06, 07, 08, 09, 0A, 0B, 0C, 0D, 0E, 0F, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 1A, 1B, 1C, 1D, 1E, 1F, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 2A, 2B, 2C, 2D, 2E, 2F, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 3A, 3B, 3C, 3D, 3E, 3F, 00, 01, 02, ...","qas":[]},{"context":"0 Wrap 64 64 XXXXXX03 03, 04, 05, 06, 07, 08, 09, 0A, 0B, 0C, 0D, 0E, 0F, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 1A, 1B, 1C, 1D, 1E, 1F, 00, 01, 02, ...","qas":[]},{"context":"0 Wrap 32 32 XXXXXX0A 0A, 0B, 0C, 0D, 0E, 0F, 00, 01, 02, 03, 04, 05, 06, 07, 08, 09, ...","qas":[]},{"context":"0 Wrap 16 16 XXXXXX02 02, 03, 04, 05, 06, 07, 00, 01, ...","qas":[]},{"context":"1 Linear Linear Burst XXXXXX0303, 04, 05, 06, 07, 08, 09, 0A, 0B, 0C, 0D, 0E, 0F, 10, 11, 12, 13, 14, 15, 16, 17, 18, ...","qas":[]},{"context":"Table 5.4  Example Wrapped Burst Sequences","qas":[]},{"context":"Burst Selection Burst ","qas":[]},{"context":"Type","qas":[]},{"context":"Wrap Boundary (Bytes)","qas":[]},{"context":"Start Address (Hex)","qas":[]},{"context":"Address Sequence (Hex)(Words)","qas":[]},{"context":"CA[45]","qas":[]},{"context":"Document Number: 001-99253 Rev. *B Page 24 of 47","qas":[]},{"context":"HyperBus Device Hardware Interface","qas":[]},{"context":"6. HyperBus Connection DescriptionsFor a description of HyperBus mandatory and optional signals refer to Section 2.1, Input/Output Summary on page 8. Following is the description for other package connectors.","qas":[]},{"context":"6.1 Other Connectors SummaryTable 6.1  Other Connectors Summary","qas":[]},{"context":"Symbol Type Description","qas":[]},{"context":"VCC Power Supply Core Power","qas":[]},{"context":"VCCQ Power Supply Input/Output Power","qas":[]},{"context":"VSS Power Supply Core Ground","qas":[]},{"context":"VSSQ Power Supply Input/Output Ground","qas":[]},{"context":"NC No Connect Not Connected internally. The signal/ball location may be used in Printed Circuit Board (PCB) as part of a routing channel. ","qas":[]},{"context":"RFU No ConnectReserved for Future Use. May or may not be connected internally, the signal/ball location should be left unconnected and unused by PCB routing channel for future compatibility. The signal/ball may be used by a signal in the future. ","qas":[]},{"context":"DNU Reserved Do Not Use. Reserved for use by Spansion. The signal/ball is connected internally. The signal/ball must be left open on the PCB.","qas":[]},{"context":"Document Number: 001-99253 Rev. *B Page 25 of 47","qas":[]},{"context":"6.2 Device Connection Diagrams","qas":[]},{"context":"Figure 6.1  HyperBus Master with Mandatory and Optional Signals","qas":[]},{"context":"Figure 6.2  HyperBus Slave with Mandatory and Optional Signals","qas":[]},{"context":"Document Number: 001-99253 Rev. *B Page 26 of 47","qas":[]},{"context":"6.3 HyperBus Block Diagram","qas":[]},{"context":"Figure 6.3  HyperBus Connections, Including Optional Signals","qas":[]},{"context":"Document Number: 001-99253 Rev. *B Page 27 of 47","qas":[]}]}]}